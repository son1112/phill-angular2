*Prairie Hill Learning Center*

* Config

  NAV => [[Dev]] / [[Styles]]

  #+NAME: package.json
  #+begin_src js :tangle package.json :padline no
    {
      "name": "phill-angular2",
      "version": "1.0.0",
      "scripts": {
        "start": "tsc && concurrently \"npm run tsc:w\" \"npm run lite\" ",
        "lite": "lite-server",
        "postinstall": "typings install",
        "tsc": "tsc",
        "tsc:w": "tsc -w",
        "typings": "typings"
      },
      "license": "ISC",
      "dependencies": {
        "@angular/common":  "2.0.0-rc.1",
        "@angular/compiler":  "2.0.0-rc.1",
        "@angular/core":  "2.0.0-rc.1",
        "@angular/http":  "2.0.0-rc.1",
        "@angular/platform-browser":  "2.0.0-rc.1",
        "@angular/platform-browser-dynamic":  "2.0.0-rc.1",
        "@angular/router":  "2.0.0-rc.1",
        "@angular/router-deprecated":  "2.0.0-rc.1",
        "@angular/upgrade":  "2.0.0-rc.1",
        "systemjs": "0.19.27",
        "core-js": "^2.4.0",
        "reflect-metadata": "^0.1.3",
        "rxjs": "5.0.0-beta.6",
        "zone.js": "^0.6.12",
        "angular2-in-memory-web-api": "0.0.9",
        "bootstrap": "^3.3.6"
      },
      "devDependencies": {
        "concurrently": "^2.0.0",
        "lite-server": "^2.2.0",
        "typescript": "^1.8.10",
        "typings":"^0.8.1"
      }
    }
  #+end_src

  #+NAME: tsconfig.json
  #+begin_src js :tangle tsconfig.json :padline no
    {
      "compilerOptions": {
        "target": "es5",
        "module": "commonjs",
        "moduleResolution": "node",
        "sourceMap": true,
        "emitDecoratorMetadata": true,
        "experimentalDecorators": true,
        "removeComments": false,
        "noImplicitAny": false
      },
      "exclude": [
        "node_modules",
        "typings/main",
        "typings/main.d.ts"
      ]
    }
  #+end_src

  #+NAME: typings.json
  #+begin_src js :tangle typings.json :padline no
    {
      "ambientDependencies": {
        "core-js": "registry:dt/core-js#0.0.0+20160317120654",
        "jasmine": "registry:dt/jasmine#2.2.0+20160412134438",
        "node": "registry:dt/node#4.0.0+20160509154515"
      }
    }
  #+end_src

  #+NAME: systemjs.config.js
  #+begin_src js :tangle systemjs.config.js :padline no
    /**
     ,* System configuration for Angular 2 samples
     ,* Adjust as necessary for your application needs.
     ,*/
    (function(global) {
      // map tells the System loader where to look for things
      var map = {
        'app':                        'app', // 'dist',
        '@angular':                   'node_modules/@angular',
        'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',
        'rxjs':                       'node_modules/rxjs'
      };
      // packages tells the System loader how to load when no filename and/or no extension
      var packages = {
        'app':                        { main: 'main.js',  defaultExtension: 'js' },
        'rxjs':                       { defaultExtension: 'js' },
        'angular2-in-memory-web-api': { defaultExtension: 'js' },
      };
      var ngPackageNames = [
        'common',
        'compiler',
        'core',
        'http',
        'platform-browser',
        'platform-browser-dynamic',
        'router',
        'router-deprecated',
        'upgrade',
      ];
      // Add package entries for angular packages
      ngPackageNames.forEach(function(pkgName) {
        packages['@angular/'+pkgName] = { main: pkgName + '.umd.js', defaultExtension: 'js' };
      });
      var config = {
        map: map,
        packages: packages
      }
      System.config(config);
    })(this);
  #+end_src

* App

  [[Index]] / [[Dev]]

  #+NAME: main.ts
  #+begin_src js :tangle app/main.ts :padline no
    import { bootstrap }    from '@angular/platform-browser-dynamic';

    import { AppComponent } from './app.component';

    bootstrap(AppComponent);
  #+end_src

  [[Dev]] / [[Styles]] / [[Template]] / [[index.html][Index]] / [[Dashboard]]

  #+NAME: app.component.ts
  #+begin_src js :tangle app/app.component.ts :padline no
    import { Component } from '@angular/core';
    import { RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from '@angular/router-deprecated';

    import { PageService } from './page.service';
    import { PagesComponent } from './pages.component';
    import { DashboardComponent } from './dashboard.component';

    import { PageDetailComponent } from './page-detail.component';

    @Component({
        selector: 'my-app',

        template: `
            <h1>{{title}}</h1>
            <nav>
              <a [routerLink]="['Dashboard']">Dashboard</a>
              <a [routerLink]="['Pages']">Pages</a>
            </nav>
            <router-outlet></router-outlet>
            `,
        styleUrls: ['app/app.component.css'],
        directives: [ROUTER_DIRECTIVES],
        providers: [
            ROUTER_PROVIDERS,
            PageService
        ]
    })

    @RouteConfig([
        {
            path: '/pages',
            name: 'Pages',
            component: PagesComponent
        },
        {
            path: '/dashboard',
            name: 'Dashboard',
            component: DashboardComponent,
            useAsDefault: true
        },
        {
            path: '/detail/:id',
            name: 'PageDetail',
            component: PageDetailComponent
        }
    ])

    export class AppComponent {
        title = 'Prairie Hill Learning Center';
    }
  #+end_src

  [[dashboard.component.ts]]
  [[page.service.ts]]
  [[mock-pages.ts]]

** Dashboard

   NAV => [[app.component.ts]] / [[dashboard.component.html]] / [[page-detail.component.css]]
   => [[app.component.css]]

   #+NAME: app.component.css
   #+begin_src css :tangle app/app.component.css :padline no
     h1 {
       font-size: 1.2em;
       color: #999;
       margin-bottom: 0;
     }
     h2 {
       font-size: 2em;
       margin-top: 0;
       padding-top: 0;
     }
     nav a {
       padding: 5px 10px;
       text-decoration: none;
       margin-top: 10px;
       display: inline-block;
       background-color: #eee;
       border-radius: 4px;
     }
     nav a:visited, a:link {
       color: #607D8B;
     }
     nav a:hover {
       color: #039be5;
       background-color: #CFD8DC;
     }
     nav a.router-link-active {
       color: #039be5;
     }
   #+end_src

   NAV => [[app.component.ts]]

   #+NAME: page-detail.component.css
   #+begin_src css :tangle app/page-detail.component.css
     label {
       display: inline-block;
       width: 3em;
       margin: .5em 0;
       color: #607D8B;
       font-weight: bold;
     }
     input {
       height: 2em;
       font-size: 1em;
       padding-left: .4em;
     }
     button {
       margin-top: 20px;
       font-family: Arial;
       background-color: #eee;
       border: none;
       padding: 5px 10px;
       border-radius: 4px;
       cursor: pointer; cursor: hand;
     }
     button:hover {
       background-color: #cfd8dc;
     }
     button:disabled {
       background-color: #eee;
       color: #ccc; 
       cursor: auto;
     }
   #+end_src

   [[dashboard.component.css]] / [[page-detail.component.css]]

   #+NAME: dashboard.component.css
   #+begin_src css :tangle app/dashboard.component.css :padline no
     [class*='col-'] {
       float: left;
     }
     ,*, *:after, *:before {
         -webkit-box-sizing: border-box;
         -moz-box-sizing: border-box;
         box-sizing: border-box;
     }
     h3 {
       text-align: center; margin-bottom: 0;
     }
     [class*='col-'] {
       padding-right: 20px;
       padding-bottom: 20px;
     }
     [class*='col-']:last-of-type {
       padding-right: 0;
     }
     .grid {
       margin: 0;
     }
     .col-1-4 {
       width: 25%;
     }
     .module {
         padding: 20px;
         text-align: center;
         color: #eee;
         max-height: 120px;
         min-width: 120px;
         background-color: #607D8B;
         border-radius: 2px;
     }
     h4 {
       position: relative;
     }
     .module:hover {
       background-color: #EEE;
       cursor: pointer;
       color: #607d8b;
     }
     .grid-pad {
       padding: 10px 0;
     }
     .grid-pad > [class*='col-']:last-of-type {
       padding-right: 20px;
     }
     @media (max-width: 600px) {
         .module {
           font-size: 10px;
           max-height: 75px; }
     }
     @media (max-width: 1024px) {
         .grid {
           margin: 0;
         }
         .module {
           min-width: 60px;
         }
     }
   #+end_src

   #+NAME: dashboard.component.ts
   #+begin_src js :tangle app/dashboard.component.ts :padline no
     import { Component, OnInit } from '@angular/core';

     import { Page } from './page';
     import { PageService } from './page.service';

     import { Router } from '@angular/router-deprecated';

     @Component({
         selector: 'my-dashboard',
         templateUrl: 'app/dashboard.component.html',
         styleUrls: ['app/dashboard.component.css']
     })

     export class DashboardComponent implements OnInit {

         pages: Page[] = [];

         constructor(
             private router: Router,
             private pageService: PageService) {
         }

         ngOnInit() {
             this.pageService.getPages()
                 .then(pages => this.pages = pages.slice(1,5));
         }

         gotoDetail(page: Page){
             let link = ['PageDetail', { id: page.id }];
             this.router.navigate(link);
         }
     }
   #+end_src

** Pages

   [[dashboard.component.html]]

   #+NAME: page-detail.component.ts
   #+begin_src js :tangle app/page-detail.component.ts :padline no
     import { Component, OnInit } from '@angular/core';
     import { RouteParams } from '@angular/router-deprecated';

     import { Page } from './page';
     import { PageService } from './page.service';

     @Component({
         selector: 'my-page-detail',
         templateUrl: 'app/page-detail.component.html'
     })


     export class PageDetailComponent implements OnInit {
         page: Page;

         constructor(
             private pageService: PageService,
             private routeParams: RouteParams) {
         }
         
         ngOnInit() {
             let id = +this.routeParams.get('id');
             this.pageService.getPage(id)
                 .then(page => this.page = page);
         }
         goBack() {
             window.history.back();
         }
     }
   #+end_src

   [[page-detail.component.html]]
   [[page.service.ts]]

   #+NAME: page-detail.component.html
   #+begin_src web :tangle app/page-detail.component.html :padline no
     <div *ngIf="page">
       <h2>{{page.title}}</h2>
       <div>
         <label>id: </label>{{page.id}}
       </div>
       <div>
         <label>title: </label>
         <input [(ngModel)]="page.title" placeholder="title"/>
       </div>
       <button (click)="goBack()">Back</button>
     </div>
   #+end_src

   [[page-detail.component.ts]]

   #+NAME: page.ts
   #+begin_src js :tangle app/page.ts :padline no
     export class Page {
         id: number;
         title: string;
     }
   #+end_src

   #+NAME: page.service.ts
   #+begin_src js :tangle app/page.service.ts :padline no
     import { Injectable } from '@angular/core';

     import { Page } from './page';
     import { PAGES } from './mock-pages';

     @Injectable()
     export class PageService {
         getPages() {
             return Promise.resolve(PAGES);
         }
         getPagesSlowly() {
             return new Promise<Page[]>(resolve => setTimeout(() => resolve(PAGES), 2000));
         }
         getPage(id: number) {
             return Promise.resolve(PAGES).then(pages => pages.filter(page => page.id === id)[0]);
         }
     }
   #+end_src

   [[page-detail.component.ts]]
   [[pages.component.html]]
   [[pages.component.ts]]

   #+NAME: pages.component.html
   #+begin_src web :tangle app/pages.component.html :padline no
     <h2>Menu</h2>
     <ul class="pages">
       <li *ngFor="let page of pages"
           [class.selected]="page === selectedPage"
           (click)="onSelect(page)">
         <span class="badge">{{page.id}}</span> {{page.title}}
       </li>
     </ul>
     <div *ngIf="selectedPage">
       <h2>
         {{selectedPage.tite | uppercase}} is your current page
       </h2>
       <button (click)="gotoDetail()">View Details</button>
     </div>

   #+end_src

   [[pages.component.css]]

   #+NAME: pages.component.css
   #+begin_src css :tangle app/pages.component.css
     .selected {
         background-color: #CFD8DC !important;
         color: white;
     }
     .pages {
         margin: 0 0 2em 0;
         list-style-type: none;
         padding: 0;
         width: 15em;
     }
     .pages li {
         cursor: pointer;
         position: relative;
         left: 0;
         background-color: #EEE;
         margin: .5em;
         padding: .3em 0;
         height: 1.6em;
         border-radius: 4px;
     }
     .pages li.selected:hover {
         background-color: #BBD8DC !important;
         color: white;
     }
     .pages li:hover {
         color: #607D8B;
         background-color: #DDD;
         left: .1em;
     }
     .pages .text {
         position: relative;
         top: -3px;
     }
     .pages .badge {
         display: inline-block;
         font-size: small;
         color: white;
         padding: 0.8em 0.7em 0 0.7em;
         background-color: #607D8B;
         line-height: 1em;
         position: relative;
         left: -1px;
         top: -4px;
         height: 1.8em;
         margin-right: .8em;
         border-radius: 4px 0 0 4px;
     }

   #+end_src

   #+NAME: pages.component.ts
   #+begin_src js :tangle app/pages.component.ts :padline no
     import { Component, OnInit } from '@angular/core';
     import { Router } from '@angular/router-deprecated';

     import { Page } from './page';
     import { PageService } from './page.service';

     @Component({
         selector: 'my-pages',
         templateUrl: 'app/pages.component.html',
         styleUrls: ['app/pages.component.css']
     })

     export class PagesComponent implements OnInit {
         title = 'Prairie Hill Learning Center';

         pages: Page[]; 
         selectedPage: Page;

         constructor(
             private router: Router,
             private pageService: PageService) { }

         getPages() {
             this.pageService.getPages().then(pages => this.pages = pages);
         }

         ngOnInit() {
             this.getPages();
         }
         
         onSelect(page: Page) { this.selectedPage = page; }

         gotoDetail() {
             this.router.navigate(['PageDetail', {
                 id: this.selectedPage.id }]);
         }
     }
   #+end_src

   [[dashboard.component.ts]]

   #+NAME: mock-pages.ts
   #+begin_src js :tangle app/mock-pages.ts :padline no
     import { Page } from './page';

     export var PAGES: Page[] = [
         { "id": 1,  "title": "Home"       },
         { "id": 2,  "title": "About"      },
         { "id": 3,  "title": "Programs"   },
         { "id": 4,  "title": "Tours"      },
         { "id": 5,  "title": "Staff"      },
         { "id": 6,  "title": "Calendar"   },
         { "id": 7,  "title": "Employment" },
         { "id": 8,  "title": "Donate"     },
         { "id": 9,  "title": "Contact"    },
         { "id": 10, "title": "Events"     }
     ];
   #+end_src

* Template

  [[App]] /

  #+NAME: index.html
  #+begin_src web :tangle index.html :padline no
    <html>
      <head>
        <base href="/">
        
        <title>Prairie Hill Learning Center</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!--<link rel="stylesheet" href="css/pure-release-0.6.0/pure-min.css">-->
        <link rel="stylesheet" href="styles.css">
        <link href='//fonts.googleapis.com/css?family=Lobster|Roboto:400,100,100italic,700italic,700|Clicker+Script|Kaushan+Script|News+Cycle:400,700|BenchNine|Poiret+One|Open+Sans+Condensed:300|Playball|Shadows+Into+Light+Two' rel='stylesheet' type='text/css'>

        <!-- 1. Load libraries -->
         <!-- Polyfill(s) for older browsers -->
        <script src="node_modules/core-js/client/shim.min.js"></script>
        <script src="node_modules/zone.js/dist/zone.js"></script>
        <script src="node_modules/reflect-metadata/Reflect.js"></script>
        <script src="node_modules/systemjs/dist/system.src.js"></script>

        <!--<script src="https://www.gstatic.com/firebasejs/3.0.0/firebase.js"></script>-->
        
        <!-- 2. Configure SystemJS -->
        <script src="systemjs.config.js"></script>
        <script>
         System.import('app').catch(function(err){ console.error(err); });
        </script>
      </head>
      <!-- 3. Display the application -->
      <body>
        <div id="header" styleName="pure-g">
          <phill-header>...</phill-header>
        </div>
        <div id="main" styleName="pure-g">
          <my-app>Loading...</my-app>
        </div>
        <div id="footer" styleName="pure-g">
          <phill-footer>...</phill-footer>
        </div>
      </body>
    </html>
  #+end_src

** Dashboard

   [[dashboard.component.ts]]
   [[pages.component.ts]]

   #+NAME: dashboard.component.html
   #+begin_src web :tangle app/dashboard.component.html :padline no
     <h3>Prairie Hill Pages (Spaces)</h3>
     <div class="grid grid-pad">
       <div *ngFor="let page of pages"
            (click)="gotoDetail(page)" class="col-1-4">
         <div class="module page">
           <h4>{{page.title}}</h4>
         </div>
       </div>
     </div>
   #+end_src

* Styles

  [[Dev]] / [[App]]

  #+NAME: styles.css
  #+begin_src css :tangle styles.css :padline no
    h1 {
      color: #369;
      font-family: Arial, Helvetica, sans-serif;
      font-size: 250%;
    }
    h2 { 
      color: #444;
      font-family: Arial, Helvetica, sans-serif;   
      font-weight: lighter;
    }
    body { 
      margin: 2em; 
    }
    body, input[text], button { 
      color: #888; 
      font-family: Cambria, Georgia; 
    }
    button {
      font-family: Arial;
      background-color: #eee;
      border: none;
      padding: 5px 10px;
      border-radius: 4px;
      cursor: pointer;
      cursor: hand;
    }
    button:hover {
      background-color: #cfd8dc;
    }
    button:disabled {
      background-color: #eee;
      color: #aaa; 
      cursor: auto;
    }
    /* everywhere else */
    ,* { 
      font-family: Arial, Helvetica, sans-serif; 
    }
  #+end_src

  NAV => [[index.html]]
  
* Dev

** Sun May 22 14:10:19 CDT 2016

   https://angular.io/docs/ts/latest/tutorial/toh-pt5.html

   Routing

   - [ ] turn [[App]] into an application shell that only handles navigation
   - [ ] relocate /Pages/ concerns within the current [[app.component.js]] to a separate
     [[PagesComponent]]
   - [ ] add routing
   - [ ] create a new [[DashboardComponent]]
   - [ ] tie the /Dashboard/ into the navigation structure
  
** Sat May 21 22:28:33 CDT 2016

   https://angular.io/docs/js/latest/quickstart.html

  Angular2 is written with TypeScript(ES6). This is the future.
  
  https://angular.io/docs/ts/latest/quickstart.html

  1. Create the app's project folder and define package dependencies and special
     project setup

     a) Create the project folder

        You are in [[./][it]].

     b) Add package definitiion and configuration files

        [[Config]]

        [[package.json]]
        [[tsconfig.json]]
        [[typings.json]]
        [[systemjs.config.js]]

     c) Install packages

        : npm install

        - [-] npm WARN
          - [X] optional
            
            : Skipping failed optional dependency /chokidar/fsevents:

            https://github.com/paulmillr/chokidar/issues/425

            "It's just a warning, not an error. You can safely ignore it. 
            Fsevents is an optional dependency and is used on only on OSX."
            --nono

          - [X] notsup

            : Not compatible with your operating system or architecture: fsevents@1.0.12

          - [ ] phill-angular2@1.0.0 No repository field.

  2. Create the app's Angular root component
     ---------------------------------------

     [[Config]] / [[App]]
     -------------
     app/[[app.component.ts]]

     Structure of every component:
     -----------------------------

     - One or more [[import]] statments to reference the things we need.
     - A [[@Component decorator]] that tells Angular what template to use and how to
       create the component.
     - A [[component class]] that controls the appearance and behavior of a view 
       through its template.
     
  3. Add [[main.ts]], identifying the root component to Angular

     [[App]]

     app/[[main.ts]]

  4. Add [[index.html]], the web page that hosts the application

     [[Template]]

  5. Build and run the app

     : npm start

** Tutorials

   https://angular.io/docs/ts/latest/tutorial/toh-pt3.html

   [[app.component.ts]]

   [[page-detail.component.ts]]
  
   [[App]]
