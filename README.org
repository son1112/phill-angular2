*Prairie Hill Learning Center*

* Config

  [[Dev]]

  #+NAME: package.json
  #+begin_src js :tangle package.json :padline no
    {
      "name": "phill-angular2",
      "version": "1.0.0",
      "scripts": {
        "start": "tsc && concurrently \"npm run tsc:w\" \"npm run lite\" ",
        "lite": "lite-server",
        "postinstall": "typings install",
        "tsc": "tsc",
        "tsc:w": "tsc -w",
        "typings": "typings"
      },
      "license": "ISC",
      "dependencies": {
        "@angular/common":  "2.0.0-rc.1",
        "@angular/compiler":  "2.0.0-rc.1",
        "@angular/core":  "2.0.0-rc.1",
        "@angular/http":  "2.0.0-rc.1",
        "@angular/platform-browser":  "2.0.0-rc.1",
        "@angular/platform-browser-dynamic":  "2.0.0-rc.1",
        "@angular/router":  "2.0.0-rc.1",
        "@angular/router-deprecated":  "2.0.0-rc.1",
        "@angular/upgrade":  "2.0.0-rc.1",
        "systemjs": "0.19.27",
        "core-js": "^2.4.0",
        "reflect-metadata": "^0.1.3",
        "rxjs": "5.0.0-beta.6",
        "zone.js": "^0.6.12",
        "angular2-in-memory-web-api": "0.0.9",
        "bootstrap": "^3.3.6"
      },
      "devDependencies": {
        "concurrently": "^2.0.0",
        "lite-server": "^2.2.0",
        "typescript": "^1.8.10",
        "typings":"^0.8.1"
      }
    }
  #+end_src

  #+NAME: tsconfig.json
  #+begin_src js :tangle tsconfig.json :padline no
    {
      "compilerOptions": {
        "target": "es5",
        "module": "commonjs",
        "moduleResolution": "node",
        "sourceMap": true,
        "emitDecoratorMetadata": true,
        "experimentalDecorators": true,
        "removeComments": false,
        "noImplicitAny": false
      },
      "exclude": [
        "node_modules",
        "typings/main",
        "typings/main.d.ts"
      ]
    }
  #+end_src

  #+NAME: typings.json
  #+begin_src js :tangle typings.json :padline no
    {
      "ambientDependencies": {
        "core-js": "registry:dt/core-js#0.0.0+20160317120654",
        "jasmine": "registry:dt/jasmine#2.2.0+20160412134438",
        "node": "registry:dt/node#4.0.0+20160509154515"
      }
    }
  #+end_src

  #+NAME: systemjs.config.js
  #+begin_src js :tangle systemjs.config.js :padline no
    /**
     ,* System configuration for Angular 2 samples
     ,* Adjust as necessary for your application needs.
     ,*/
    (function(global) {
      // map tells the System loader where to look for things
      var map = {
        'app':                        'app', // 'dist',
        '@angular':                   'node_modules/@angular',
        'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',
        'rxjs':                       'node_modules/rxjs'
      };
      // packages tells the System loader how to load when no filename and/or no extension
      var packages = {
        'app':                        { main: 'main.js',  defaultExtension: 'js' },
        'rxjs':                       { defaultExtension: 'js' },
        'angular2-in-memory-web-api': { defaultExtension: 'js' },
      };
      var ngPackageNames = [
        'common',
        'compiler',
        'core',
        'http',
        'platform-browser',
        'platform-browser-dynamic',
        'router',
        'router-deprecated',
        'upgrade',
      ];
      // Add package entries for angular packages
      ngPackageNames.forEach(function(pkgName) {
        packages['@angular/'+pkgName] = { main: pkgName + '.umd.js', defaultExtension: 'js' };
      });
      var config = {
        map: map,
        packages: packages
      }
      System.config(config);
    })(this);
  #+end_src

* App

  [[Dev]] / [[Styles]] / [[Template]] / [[index.html][Index]]

  #+NAME: app.component.ts
  #+begin_src js :tangle app/app.component.ts :padline no
    import { Component } from '@angular/core';

    export class Page {
        id: number;
        title: string;
    }

    @Component({
        selector: 'my-app',

        template:`
        <h1>{{title}}</h1>
        <h2>My Pages</h2>
        <ul class="pages">
          <li *ngFor="let page of pages"
            [class.selected]="page === selectedPage"
            (click)="onSelect(page)">
            <span class="badge">{{page.id}}</span> {{page.title}}
          </li>
        </ul>
        <div *ngIf="selectedPage">
          <h2>{{selectedPage.title}} details!</h2>
          <div><label>id: </label>{{selectedPage.id}}</div>
          <div>
            <label>title: </label>
            <input [(ngModel)]="selectedPage.title" placeholder="title"/>
          </div>
        </div>
            `,
        styles:[`
                .selected {
                    background-color: #CFD8DC !important;
                    color: white;
                }
                .pages {
                    margin: 0 0 2em 0;
                    list-style-type: none;
                    padding: 0;
                    width: 15em;
                }
                .pages li {
                    cursor: pointer;
                    position: relative;
                    left: 0;
                    background-color: #EEE;
                    margin: .5em;
                    padding: .3em 0;
                    height: 1.6em;
                    border-radius: 4px;
                }
                .pages li.selected:hover {
                    background-color: #BBD8DC !important;
                    color: white;
                }
                .pages li:hover {
                    color: #607D8B;
                    background-color: #DDD;
                    left: .1em;
                }
                .pages .text {
                    position: relative;
                    top: -3px;
                }
                .pages .badge {
                    display: inline-block;
                    font-size: small;
                    color: white;
                    padding: 0.8em 0.7em 0 0.7em;
                    background-color: #607D8B;
                    line-height: 1em;
                    position: relative;
                    left: -1px;
                    top: -4px;
                    height: 1.8em;
                    margin-right: .8em;
                    border-radius: 4px 0 0 4px;
                }
                `]
    })

    export class AppComponent {
        title = 'Prairie Hill Learning Center';
        pages = PAGES;
        selectedPage: Page;

        onSelect(page: Page) { this.selectedPage = page; }
    }

    var PAGES: Page[] = [
        { "id": 1,  "title": "Home"       },
        { "id": 2,  "title": "About"      },
        { "id": 3,  "title": "Programs"   },
        { "id": 4,  "title": "Tours"      },
        { "id": 5,  "title": "Staff"      },
        { "id": 6,  "title": "Calendar"   },
        { "id": 7,  "title": "Employment" },
        { "id": 8,  "title": "Donate"     },
        { "id": 9,  "title": "Contact"    },
        { "id": 10, "title": "Events"     }
    ];


  #+end_src

  [[Index]] /

  #+NAME: main.ts
  #+begin_src js :tangle app/main.ts :padline no
    import { bootstrap }    from '@angular/platform-browser-dynamic';

    import { AppComponent } from './app.component';

    bootstrap(AppComponent);
  #+end_src

* Template

  [[App]] /

  #+NAME: index.html
  #+begin_src web :tangle index.html :padline no
    <html>
      <head>
        <title>Prairie Hill Learning Center</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!--<link rel="stylesheet" href="css/pure-release-0.6.0/pure-min.css">-->
        <link rel="stylesheet" href="styles.css">
        <link href='//fonts.googleapis.com/css?family=Lobster|Roboto:400,100,100italic,700italic,700|Clicker+Script|Kaushan+Script|News+Cycle:400,700|BenchNine|Poiret+One|Open+Sans+Condensed:300|Playball|Shadows+Into+Light+Two' rel='stylesheet' type='text/css'>

        <!-- 1. Load libraries -->
         <!-- Polyfill(s) for older browsers -->
        <script src="node_modules/core-js/client/shim.min.js"></script>
        <script src="node_modules/zone.js/dist/zone.js"></script>
        <script src="node_modules/reflect-metadata/Reflect.js"></script>
        <script src="node_modules/systemjs/dist/system.src.js"></script>

        <!--<script src="https://www.gstatic.com/firebasejs/3.0.0/firebase.js"></script>-->
        
        <!-- 2. Configure SystemJS -->
        <script src="systemjs.config.js"></script>
        <script>
         System.import('app').catch(function(err){ console.error(err); });
        </script>
      </head>
      <!-- 3. Display the application -->
      <body>
        <my-app>Loading...</my-app>
      </body>
    </html>
  #+end_src

* Styles

  [[Dev]] / [[App]]

  #+NAME: styles.css
  #+begin_src css :tangle styles.css :padline no
    h1 {
      color: #369;
      font-family: Arial, Helvetica, sans-serif;
      font-size: 250%;
    }
    body {
      margin: 2em;
    }
  #+end_src
  
* Dev

  https://angular.io/docs/js/latest/quickstart.html
  
  : Sat May 21 22:28:33 CDT 2016

  Angular2 is written with TypeScript(ES6). This is the future.
  
  https://angular.io/docs/ts/latest/quickstart.html

  1. Create the app's project folder and define package dependencies and special
     project setup

     a) Create the project folder

        You are in [[./][it]].

     b) Add package definitiion and configuration files

        [[Config]]

        [[package.json]]
        [[tsconfig.json]]
        [[typings.json]]
        [[systemjs.config.js]]

     c) Install packages

        : npm install

        - [-] npm WARN
          - [X] optional
            
            : Skipping failed optional dependency /chokidar/fsevents:

            https://github.com/paulmillr/chokidar/issues/425

            "It's just a warning, not an error. You can safely ignore it. 
            Fsevents is an optional dependency and is used on only on OSX."
            --nono

          - [X] notsup

            : Not compatible with your operating system or architecture: fsevents@1.0.12

          - [ ] phill-angular2@1.0.0 No repository field.

  2. Create the app's Angular root component
     ---------------------------------------

     [[Config]] / [[App]]
     -------------
     app/[[app.component.ts]]

     Structure of every component:
     -----------------------------

     - One or more [[import]] statments to reference the things we need.
     - A [[@Component decorator]] that tells Angular what template to use and how to
       create the component.
     - A [[component class]] that controls the appearance and behavior of a view 
       through its template.
     
  3. Add [[main.ts]], identifying the root component to Angular

     [[App]]

     app/[[main.ts]]

  4. Add [[index.html]], the web page that hosts the application

     [[Template]]

  5. Build and run the app

     : npm start

** Tutorials

   [[app.component.ts]]

     
  
